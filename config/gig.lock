schema: 'https://schema.gigster.com/schemas/cli/2.0.0/gig.yaml'
version: 2.0.0
name: giggy-tracker
description: track times to deploy giggy on circleci
modules:
  - name: marketplace-schema
    location: 'npm:@gigster/module-marketplace-schema@1.1.6'
    spec:
      type: goods
      model: deployment
blocks:
  - name: api
    location: 'npm:@gigster/block-loopback@1.2.2'
    spec: {}
    modules:
      - name: loopback-models
        location: 'npm:@gigster/module-loopback-models@1.1.2'
        spec: {}
      - name: loopback-authentication
        location: 'npm:@gigster/module-loopback-authentication@1.1.2'
        spec:
          webEnabled: true
          emailVerificationRequired: false
          providers:
            local: {}
            facebook-login:
              clientID: FACEBOOK_CLIENT_ID
              clientSecret: FACEBOOK_CLIENT_SECRET
      - name: loopback-elasticsearch
        location: 'npm:@gigster/module-loopback-elasticsearch@1.1.6'
        spec:
          models: []
      - name: node-docker
        location: 'npm:@gigster/module-node-docker@1.1.5'
        spec: {}
datasources:
  - name: email
    type: email
    spec:
      host: EMAIL_HOST
      port: EMAIL_PORT
      secure: EMAIL_SECURE
      user: EMAIL_USER
      password: EMAIL_PASSWORD
  - name: db
    type: file
models:
  - name: deployment
    properties:
      - name: id
        type: number
        id: true
      - name: buildStart
        type: date
        required: true
      - name: deployStart
        type: date
        required: true
      - name: deployFinish
        type: date
        required: true
      - name: name
        type: string
        required: true
        min: 2
        max: 50
      - name: description
        type: string
        max: 1000
    relations:
      - name: seller
        type: belongsTo
        model: user
        primaryKey: id
    methods: []
    acls:
      - accessType: '*'
        principalType: ROLE
        principalId: $everyone
        permission: DENY
      - accessType: '*'
        principalType: ROLE
        principalId: admin
        permission: ALLOW
      - accessType: '*'
        principalId: $owner
        principalType: ROLE
        permission: ALLOW
      - accessType: READ
        principalId: $authenticated
        principalType: ROLE
        permission: ALLOW
      - method: create
        accessType: WRITE
        principalId: $authenticated
        principalType: ROLE
        permission: ALLOW
    options:
      api:
        methods: []
  - name: user
    properties:
      - name: id
        type: number
        id: true
      - name: email
        type: string
        required: true
      - name: password
        type: string
        required: true
      - name: firstName
        type: string
      - name: lastName
        type: string
      - name: bio
        type: string
      - name: isBuyer
        type: boolean
        required: true
        default: false
      - name: isSeller
        type: boolean
        required: true
        default: false
      - name: username
        type: string
      - name: emailVerified
        type: boolean
        hidden: true
      - name: verificationToken
        type: string
        hidden: true
      - name: profilePictureUrl
        type: string
    relations:
      - name: deployments
        type: hasMany
        model: deployment
        primaryKey: id
        foreignKey: sellerId
      - name: accessTokens
        type: hasMany
        model: accessToken
        foreignKey: userId
      - name: identities
        type: hasMany
        model: userIdentity
        foreignKey: userId
      - name: credentials
        type: hasMany
        model: userCredential
        foreignKey: userId
    methods: []
    acls:
      - accessType: '*'
        principalType: ROLE
        principalId: $everyone
        permission: DENY
      - accessType: '*'
        principalType: ROLE
        principalId: admin
        permission: ALLOW
      - method: create
        accessType: WRITE
        principalId: $unauthenticated
        principalType: ROLE
        permission: ALLOW
      - method: update
        accessType: WRITE
        principalId: $owner
        principalType: ROLE
        permission: ALLOW
      - accessType: READ
        principalId: $authenticated
        principalType: ROLE
        permission: ALLOW
    indexes:
      - name: email
        keys:
          - property: email
            order: ascending
        unique: true
    options:
      api:
        methods: []
  - name: accessToken
    properties:
      - name: id
        type: string
        id: true
      - name: ttl
        type: number
        default: 1209600
        description: time to live in seconds (2 weeks by default)
      - name: created
        type: date
        defaultFn: now
    relations:
      - name: user
        type: belongsTo
        model: user
        foreignKey: userId
  - name: role
    properties:
      - name: id
        type: string
        id: true
      - name: name
        type: string
        required: true
      - name: description
        type: string
      - name: created
        type: date
        defaultFn: now
      - name: modified
        type: date
        defaultFn: now
    relations:
      - name: principals
        type: hasMany
        model: roleMapping
        foreignKey: roleId
  - name: roleMapping
    properties:
      - name: id
        type: string
        id: true
      - name: principalType
        type: string
        description: >-
          The principal type, such as USER, APPLICATION, ROLE, or user model
          name in case of multiple user models
      - name: principalId
        type: string
    relations:
      - name: role
        type: belongsTo
        model: role
        foreignKey: roleId
  - name: userCredential
    properties:
      - name: provider
        type: string
        description: 'facebook, google, twitter, linkedin'
      - name: authScheme
        type: string
        description: 'oAuth, oAuth 2.0, OpenID, OpenID Connect'
      - name: externalId
        type: string
        description: The provider specific id
      - name: profile
        type: object
      - name: credentials
        type: object
      - name: created
        type: date
      - name: modified
        type: date
    relations:
      - name: user
        type: belongsTo
        model: user
        foreignKey: userId
  - name: userIdentity
    properties:
      - name: provider
        type: string
        description: 'facebook, google, twitter, linkedin'
      - name: authScheme
        type: string
        description: 'oAuth, oAuth 2.0, OpenID, OpenID Connect'
      - name: externalId
        type: string
        description: The provider specific id
      - name: profile
        type: object
      - name: credentials
        type: object
      - name: created
        type: date
      - name: modified
        type: date
    relations:
      - name: user
        type: belongsTo
        model: user
        foreignKey: userId
environments:
  - name: EMAIL_HOST
    required: true
    blocks:
      - api
  - name: EMAIL_PORT
    required: true
    blocks:
      - api
  - name: EMAIL_SECURE
    required: true
    blocks:
      - api
  - name: EMAIL_PORT
    required: true
    blocks:
      - api
  - name: EMAIL_PASSWORD
    required: true
    blocks:
      - api
  - name: FACEBOOK_CLIENT_ID
    required: true
    blocks:
      - api
  - name: FACEBOOK_CLIENT_SECRET
    required: true
    blocks:
      - api
  - name: ESHOST
    required: true
    blocks:
      - api
  - name: ESAUTH
    required: true
    blocks:
      - api
